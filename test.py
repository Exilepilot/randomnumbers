"""
Display random numbers on a pygame window.
"""
import pygame
from pygame.locals import *
from random import randint, seed

class number_display(object):
    """
    Pygame demo for displaying random numbers on the screen in random locations
    with random colours.
    """
    def __init__(self, screen, font, fps, min, max, total):
        """
        Params:
                pygame.Surface screen - The surface to draw on.
                pygame.font.Font font - The font used to render text with.
                integer fps - How many frames drawn per second.
                integer min - The minimum number generated.
                integer max - The maximum number generated.
                integer total - Total random numbers generated.
        """
        # Master pygame surface to draw on.
        self.__screen = screen
        # Used to get the width and height of the screen.
        self.__screen_rect = self.__screen.get_rect()
        # The font used to render the numbers.
        self.__font = font
        # Frames per second of demonstration.
        self.__fps = fps
        # Minimum number generated by randint.
        self.__min = min
        # Maximum number generated by randint.
        self.__max = max
        # Total numbers to display.
        self.__total = total
        # Numbers that were generated on each updates.
        self.__numbers = []
        # Run main loop.
        self.main()

    def update(self):
        """
        Generate numbers for one particular frame.
        """
        # Empty the list before generating a new batch of random numbers.
        self.__numbers = []
        # Fill list with random integers.
        for i in range(self.__total):
            seed()
            self.__numbers.append(randint(self.__min, self.__max))

    def draw(self):
        """
        Generate random colours and positions before drawing each generated number.
        """
        # Fill the surface with black. (Clearing the surface)
        #r, g, b = randint(0, 255), randint(0, 255), randint(0, 255)
        self.__screen.fill((0, 0, 0))

        # Used for generating a random x, y coordinate.
        width = self.__screen_rect.width
        height = self.__screen_rect.height

        for i in range(self.__total):
            seed() # Randomise the result of randint.
            # Get a random colour.
            r, g, b = randint(0, 255), randint(0, 255), randint(0, 255)

            # Get a random position.
            x, y = randint(0, width), randint(0, height)

            # Render it.
            surface = self.__font.render(str(self.__numbers[i]), True, (r, g, b))
            rect = surface.get_rect()

            # Position it.
            rect.x, rect.y = x, y

            # Draw it.
            self.__screen.blit(surface, rect)

    def main(self):
        finished = False
        clock = pygame.time.Clock()
        while not finished:
            clock.tick(self.__fps)
            for event in pygame.event.get():
                if event.type == QUIT:
                    finished = True
            self.update()
            self.draw()
            pygame.display.update()

def main():
    pygame.init()
    pygame.display.set_caption("Random number display demo")
    SCREEN = pygame.display.set_mode((1000, 1000))
    FONT = pygame.font.Font(pygame.font.get_default_font(), 20)
    FPS = 120
    display = number_display(SCREEN, FONT, FPS, 1, 100, 10000)

if __name__ == "__main__":
    main()
